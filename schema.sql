-- Create brands table for Zid Dashboard
CREATE TABLE IF NOT EXISTS brands (
    id BIGINT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    name TEXT NOT NULL,
    category TEXT NOT NULL,
    starting_sales DECIMAL(12,2) NOT NULL DEFAULT 0,
    monthly_growth_rate DECIMAL(5,2) NOT NULL DEFAULT 0,
    starting_month INTEGER NOT NULL DEFAULT 0,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);

-- Create an index on category for faster filtering
CREATE INDEX IF NOT EXISTS brands_category_idx ON brands(category);

-- Create an updated_at trigger
CREATE OR REPLACE FUNCTION update_updated_at_column()
RETURNS TRIGGER AS $$
BEGIN
    NEW.updated_at = NOW();
    RETURN NEW;
END;
$$ language 'plpgsql';

CREATE OR REPLACE TRIGGER update_brands_updated_at
    BEFORE UPDATE ON brands
    FOR EACH ROW
    EXECUTE FUNCTION update_updated_at_column();

-- Insert default brands data
INSERT INTO brands (name, category, starting_sales, monthly_growth_rate, starting_month) 
VALUES 
    ('Crush', 'Premium Food', 60000.00, 15.50, 0),
    ('Milaf', 'Traditional Goods', 10000.00, 8.20, 0),
    ('Bab Sharqi', 'Traditional Goods', 10000.00, 3.10, 0),
    ('Nuricle', 'Health & Beauty', 10000.00, 6.80, 0),
    ('Reeq Al Nahl', 'Premium Food', 5000.00, 12.30, 0),
    ('Leen Dates', 'Premium Food', 20000.00, 5.50, 0)
ON CONFLICT (id) DO NOTHING;

-- Enable Row Level Security (RLS)
ALTER TABLE brands ENABLE ROW LEVEL SECURITY;

-- Create policy to allow all operations (since we're handling auth in the app)
CREATE POLICY IF NOT EXISTS "Allow all operations on brands" ON brands
    FOR ALL USING (true) WITH CHECK (true);